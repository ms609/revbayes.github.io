################################################################################
#
# RevBayes Example: Homochronous piecewise coalescent process applied to horse data
#
# authors: Sebastian Hoehna, Ronja Billenstein
#
################################################################################

## Global settings

NUM_MCMC_ITERATIONS = 10000
THINNING            = 10

# create the monitor and moves vectors
moves     = VectorMoves()
monitors  = VectorMonitors()

#######################
# Reading in the Data #
#######################

# Read in trees from the skyline analysis
trees = readTreeTrace("output/horses_skyline.trees", treetype = "clock", burnin = 0.1)
maptree = mapTree(trace=trees)
taxa <- maptree.taxa()

# Get the number of taxa and branches. We need these later on.
n_taxa <- taxa.size()
# n_branches <- 2 * n_taxa - 3


##############
# Tree model #
##############

for (i in 1:3){
	pop_size[i] ~ dnUniform(0,1E8)
	pop_size[i].setValue(100)
	moves.append( mvScale(pop_size[i], lambda=0.1, tune=true, weight=2.0) )
}

change_points[1] ~ dnUniform(2E4,1E5)
change_points[2] ~ dnUniform(1.5E5,3.2E5)
for (i in 1:2){
	moves.append( mvSlide(change_points[i], delta=0.1, tune=true, weight=2.0) )
}


dem_const_1 = dfConstant(pop_size[1])
dem_const_2 = dfConstant(pop_size[2])
dem_const_3 = dfConstant(pop_size[3])

psi ~ dnCoalescentDemography([dem_const_1,dem_const_2,dem_const_3], changePoints=change_points, taxa=taxa)
psi.clamp(maptree)

#############
# The Model #
#############


### workspace model wrapper ###
mymodel = model(psi)



################
# The Analysis #
################

#add monitors
monitors.append( mnModel(filename="output/modelSel/3const/modelSel_piecewise_3const.log",printgen=THINNING) )
monitors.append( mnFile(filename="output/modelSel/3const/modelSel_piecewise_3const_NEs.log",pop_size,printgen=THINNING) )
monitors.append( mnFile(filename="output/modelSel/3const/modelSel_piecewise_3const_times.log",change_points,printgen=THINNING) )
monitors.append( mnScreen(pop_size, printgen=100) )


pow_p = powerPosterior(mymodel, moves, monitors, "output/modelSel/3const/modelSel_piecewise_3const_powp.out", cats=128) 
pow_p.burnin(generations=2000,tuningInterval=200)
pow_p.run(generations=2000) 

# mymcmc = mcmc(mymodel, monitors, moves)
# mymcmc.burnin(NUM_MCMC_ITERATIONS*0.1,100)
# mymcmc.run(NUM_MCMC_ITERATIONS, tuning = 100)

# mymcmc.operatorSummary()

################

# you may want to quit RevBayes now
q()
